name: Xiaomi AX3600 NSS Build

on: workflow_dispatch

env:
  RELEASE_PREFIX: qualcommax-6.x-nss-wifi
  
jobs:
  build:
    name: AX3600 NSS Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install packages
        run: |
            sudo apt-get update && \
            sudo apt install -y build-essential \
            clang \
            flex \
            bison \
            g++ \
            gawk \
            gcc-multilib \
            g++-multilib \
            gettext \
            git \
            libncurses5-dev \
            libssl-dev \
            python3-setuptools \
            rsync \
            swig \
            unzip \
            zlib1g-dev \
            file \
            wget && \
            sudo apt-get clean

      - name: Checkout
        uses: actions/checkout@v4

      - name: Update feeds
        # run:  make package/symlinks
        run: cp feeds.conf.default feeds.conf 
         && scripts/feeds update -a 
         && scripts/feeds install -a

      - name: Generate AX3600 NSS Config
        run: cp nss-setup/config-nss.seed .config 
         && sed -i 's/# CONFIG_TARGET_qualcommax_ipq807x_DEVICE_xiaomi_ax3600 is not set/CONFIG_TARGET_qualcommax_ipq807x_DEVICE_xiaomi_ax3600=y/g' .config
         && echo "CONFIG_KMOD_ALL=y" >> .config 
         && echo "CONFIG_FEED_custom_packages=n" >> .config

      - name: Build Config
        run: make defconfig V=s -j$(nproc)

      - name: Build Images
        run: make V=s -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipq807x-images
          path: bin/targets/qualcommax/ipq807x

  release:
    name: Create Release
    needs: [build]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ipq807x-images
          path: firmware
      - name: Display structure of downloaded files
        run: ls -R
      - name: Get current date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV
      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: firmware/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ env.RELEASE_DATE }}
          name: Updated Built images ${{ env.RELEASE_DATE }}
          body: |
            Updated prebuilt images for ${{ env.RELEASE_DATE }}
      - name: Clean up old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
